상속
상속은 상위 클래스를 물려받는거고 이를 통해 재활용을 극대화한다
=> 10% field

상속은 상위 클래스의 규칙(규약을) 물려 받는 것이다.
=> 90% Method(function)

호출과 실행은 다르다!!!! 
- 상속받은 클래스의 메소드를 불러왔을때 받은 클래스의 메소드를 먼저 호출해서 들어가고 다시 보모클래스의 상위메서드를 실행하고 내려온다.

------------------------------------------------------------------------------------------------------------------------------

Interface

인터페이스는 변수선언 불가능 (단 Static은 가능 - 전역영역에 들어가기때문에 상관이 없다)

인터페이스명은 ~able 을 쓰는게 일반적이다 ex) interface Printabe
*인터페이스는 (사용자 관점) 규약이다.

- 기능을 약속한대로 동일하게 만든다.(강제)

규약의 장점
1) 코드가 간결해짐
2) 핵심기능만 따로 만들어서 사용자가 손쉽게 사용
3) 같은 인터페이스를 구현한 객체를 다른 비슷한 객체로 바꾸기 쉽다

즉 어플리케이션을 수정 할 필요가 없음

interface의 상속은 기능의 확장 개념으로 생각
- 기능이 더 생겼다고 인터페이스에 기능을 추가하면 다른 클래스가 작동하지 않음
 ex) HP에서 새기능을 만들어서 추가해달라고 요구해서 인터페이스에서 바꾸면 삼성에서는 인터페이스 자체를 사용불가하게됨
   이를 해결하기위해서 인터페이스에 상속을 만들거나 Default 메서드를 새로 만든다.
