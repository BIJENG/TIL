스프링부트를 이용하여 외부 api 를 가져오는법

1. 의존성 추가: 먼저 프로젝트에 필요한 의존성을 추가합니다. 스프링 부트는 이미 RestTemplate과 같은 HTTP 통신을 단순화하는 라이브러리를 제공하므로 별도의 의존성 추가가 필요하지 않습니다.
2. RestTemplate을 이용한 API 호출: RestTemplate을 사용하여 외부 API를 호출합니다. 이를 통해 데이터를 가져오고 사용할 수 있습니다. 예를 들어, 외부 API의 엔드포인트에 GET 요청을 보내고 응답을 받아올 수 있습니다.
3. 응답 처리: 받아온 응답을 원하는 형태로 처리합니다. 주로 JSON 형식의 데이터를 자바 객체로 매핑하여 사용합니다.
ex)
import org.springframework.web.client.RestTemplate;

public class ExternalAPIService {

    private final String apiUrl = "https://api.example.com/data";

    private final RestTemplate restTemplate;

    public ExternalAPIService(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    public String fetchDataFromExternalAPI() {
        // API 호출 및 응답 처리
        return restTemplate.getForObject(apiUrl, String.class);
    }
}

위의 코드에서는 RestTemplate을 사용하여 외부 API에서 데이터를 가져오는 fetchDataFromExternalAPI() 메서드를 구현했습니다. 이 메서드는 간단하게 외부 API에 GET 요청을 보내고, 받아온 응답을 문자열 형태로 반환합니다.
이제 이 서비스를 컨트롤러에서 호출하여 사용할 수 있습니다.

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class MyController {

    private final ExternalAPIService externalAPIService;

    public MyController(ExternalAPIService externalAPIService) {
        this.externalAPIService = externalAPIService;
    }

    @GetMapping("/data")
    public String getDataFromExternalAPI() {
        return externalAPIService.fetchDataFromExternalAPI();
    }
}

이렇게 하면 /data 엔드포인트에 GET 요청을 보내면 외부 API에서 가져온 데이터를 반환하는 간단한 웹 애플리케이션이 됩니다.
