JSP(Java Server Pages)에서 
어노테이션(Annotation)은 코드나 프로그램의 메타데이터를 정의하고 제공하는 방법입니다. 
일반적으로 JSP에서는 어노테이션을 사용하여 서블릿을 정의하거나 JSP의 라이프사이클 이벤트를 처리하는 데 사용됩니다.



@Controller 
스프링 프레임워크에서 사용되는 어노테이션 중 하나로, 컨트롤러 클래스임을 나타냅니다. 
스프링 MVC 웹 애플리케이션에서 사용되며, 클라이언트의 요청을 처리하고 응답을 생성하는 데 사용됩니다.



@Autowired
스프링 프레임워크에서 사용되는 의존성 주입(Dependency Injection)을 위한 어노테이션 중 하나입니다. 
스프링은 @Autowired 어노테이션이 붙은 필드나 생성자, 메서드의 매개변수를 스프링 컨테이너에서 관리하는 빈(Bean)에 자동으로 주입합니다.


@GetMapping
스프링 프레임워크의 @RequestMapping 어노테이션의 축약형 중 하나입니다. 
보통 웹 애플리케이션의 컨트롤러에서 HTTP GET 요청을 처리할 때 사용됩니다.

주요 특징은 다음과 같습니다
HTTP 메서드 매핑: @GetMapping 어노테이션은 HTTP GET 요청에 대한 매핑을 지정합니다. 이를 통해 해당 메서드가 GET 요청을 처리함을 나타냅니다.
경로 매핑: @GetMapping 어노테이션은 특정 URL 경로에 대한 매핑을 지정합니다. 이는 컨트롤러 내의 특정 메서드가 특정 URL에 대한 GET 요청을 처리한다는 것을 나타냅니다.

@PostMapping
스프링 프레임워크에서 HTTP POST 요청을 처리하기 위한 어노테이션입니다. 
일반적으로 웹 애플리케이션의 컨트롤러에서 사용되며, 클라이언트로부터의 POST 요청을 처리하는 메서드를 지정합니다.

주요 특징은 다음과 같습니다
HTTP 메서드 매핑: @PostMapping 어노테이션은 HTTP POST 요청에 대한 매핑을 지정합니다. 이를 통해 해당 메서드가 POST 요청을 처리함을 나타냅니다.
경로 매핑: @PostMapping 어노테이션은 특정 URL 경로에 대한 매핑을 지정합니다. 이는 컨트롤러 내의 특정 메서드가 특정 URL에 대한 POST 요청을 처리한다는 것을 나타냅니다.


@MapperScan
마이바티스(MyBatis)와 같은 ORM(Object-Relational Mapping) 프레임워크에서 사용되는 어노테이션입니다. 
스프링 부트와 함께 사용되며, 마이바티스의 Mapper 인터페이스를 스캔하여 자동으로 빈으로 등록합니다.

주요 특징은 다음과 같습니다
Mapper 인터페이스 스캔: @MapperScan 어노테이션을 사용하여 지정된 패키지 또는 패키지들을 스캔하여 마이바티스의 Mapper 인터페이스를 찾습니다.
빈으로 등록: 스캔된 Mapper 인터페이스들을 스프링 애플리케이션 컨텍스트에 빈으로 등록하여 사용할 수 있습니다.


@ModelAttribute
스프링 MVC에서 컨트롤러 메서드에서 사용되는 어노테이션 중 하나입니다. 
이 어노테이션은 요청 매핑된 메서드의 매개변수로 사용되며, 해당 매개변수가 모델에 바인딩되어 뷰로 전달될 때 사용됩니다.
주로 HTML 폼과 컨트롤러 간의 데이터 바인딩에 사용되며, 폼 입력 필드의 값을 자동으로 객체의 속성에 바인딩하고자 할 때 유용합니다.

주요 특징은 다음과 같습니다
모델 속성 바인딩: @ModelAttribute 어노테이션이 붙은 매개변수는 해당 메서드가 실행될 때 모델에 바인딩됩니다. 즉, 메서드의 매개변수는 모델 속성의 이름으로 사용되고, 해당 값은 모델에 저장됩니다.
폼 데이터 바인딩: HTML 폼에서 전송된 데이터는 자동으로 @ModelAttribute 어노테이션이 붙은 매개변수에 바인딩됩니다. 이를 통해 컨트롤러에서 폼 데이터를 손쉽게 처리할 수 있습니다.
