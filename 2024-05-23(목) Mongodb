MongoDB 
NoSQL 데이터베이스 시스템 중 하나로, 문서 지향(Document-Oriented) 데이터베이스입니다.

  MongoDB의 주요 개념

1. 문서(Document)
MongoDB의 기본 데이터 단위입니다.
JSON 형식의 데이터를 BSON(Binary JSON) 형식으로 저장합니다.
각 문서는 키-값 쌍의 컬렉션으로 구성됩니다.

2. 컬렉션(Collection)
관련 문서들의 그룹입니다.
관계형 데이터베이스의 테이블과 유사합니다.
한 컬렉션 내의 문서들은 서로 다른 구조를 가질 수 있습니다.

3. 데이터베이스(Database)
컬렉션들의 그룹입니다.
하나의 MongoDB 인스턴스는 여러 데이터베이스를 가질 수 있습니다.

4. 스키마리스(Schemaless)
MongoDB는 스키마를 강제하지 않습니다.
즉, 동일한 컬렉션 내에서도 서로 다른 구조를 가진 문서를 저장할 수 있습니다.

  MongoDB의 장점

1. 유연성
스키마리스 구조로 인해 데이터 구조가 자주 변경되는 환경에 적합합니다.
데이터 모델링이 유연하며, 개발 초기 단계에서 유리합니다.

2. 확장성
수평 확장이 가능하여 대규모 데이터를 효율적으로 처리할 수 있습니다.
샤딩(Sharding) 기능을 통해 데이터를 여러 서버에 분산 저장할 수 있습니다.

3. 성능
인덱싱, 메모리 맵핑 파일, 지연된 쓰기(Lazy Writes) 등을 통해 높은 읽기 및 쓰기 성능을 제공합니다.

4. 다양한 데이터 타입 지원
다양한 데이터 타입을 지원하여 복잡한 데이터 구조를 효율적으로 저장할 수 있습니다.

MongoDB는 유연성과 확장성이 뛰어난 NoSQL 데이터베이스로, 다양한 데이터 구조를 효율적으로 처리할 수 있습니다. 
스키마리스 구조 덕분에 데이터 모델링이 유연하며, 수평 확장을 통해 대규모 데이터를 처리하는 데 적합합니다. 
MongoDB의 기본 개념과 명령어를 이해하고 나면, 다양한 애플리케이션에서 MongoDB를 효과적으로 활용할 수 있습니다.

  
일반 관계형 데이터베이스와의 차이점

데이터 모델링 및 구조

1. 데이터 모델링
RDBMS: 관계형 데이터베이스는 테이블로 데이터를 모델링하며, 테이블은 행(row)과 열(column)로 구성됩니다. 각 행은 고정된 스키마를 따라야 하며, 스키마는 사전에 정의되어야 합니다.
MongoDB: MongoDB는 문서 지향 데이터베이스로, 데이터를 BSON 형식의 문서로 저장합니다. 문서는 컬렉션에 저장되며, 컬렉션 내의 문서는 서로 다른 구조를 가질 수 있습니다. 스키마리스이기 때문에 유연하게 데이터 구조를 변경할 수 있습니다.

2. 데이터 관계
RDBMS: 데이터 간의 관계를 외래 키(Foreign Key)와 조인(Join)을 통해 명확히 정의하고 관리합니다.
MongoDB: 문서 내에서 중첩 문서(Embedded Documents)나 배열(Arrays)을 통해 데이터를 포함시켜 관계를 표현할 수 있습니다. 조인 기능도 있지만, 문서 내에 데이터를 중첩시켜서 한 번의 조회로 관련 데이터를 가져오는 방식이 일반적입니다.


사용 사례
RDBMS: 금융, ERP, CRM 등 데이터 무결성과 일관성이 중요한 시스템에서 주로 사용됩니다.
MongoDB: 빅데이터, 모바일 애플리케이션, 콘텐츠 관리 시스템 등 유연한 데이터 모델링과 빠른 개발이 중요한 시스템에서 주로 사용됩니다.
