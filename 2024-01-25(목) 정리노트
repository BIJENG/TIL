상속의 개념
상속구현
상속활용

상속은 코드의 재사용성을 높이고 클래스 간의 계층 구조를 형성하여 코드를 구조화하는 데 사용됨

슈퍼클래스(superclass)와 서브클래스(subclass):

슈퍼클래스는 상속의 기반이 되는 클래스로, 다른 클래스에 기능을 제공
서브클래스는 슈퍼클래스를 확장하여 새로운 기능을 추가하거나 수정하는 클래스
extends 키워드:
자바에서 상속을 표현하기 위해 extends 키워드를 사용
서브클래스가 슈퍼클래스를 확장할 때 extends 키워드를 사용하여 상속 관계를 명시

상속에 있어서 적절한 경우인지 확인하는 방법

1 완전 이상한 관계는 직관적으로 알 수 있음
ex) class Desk, class Father   -- 두 클래스 간에 연관성이 적음을 직관적으로 알 수 있음

2 직관적 구별이 불가능하면 공식으로 파악
ex) class Father, class Dauter

is - a 관계 - ~ 머는 ~ 머다.
ex) 아빠는 딸이다 --> 말이 안됨! 상속부적격

더 정확한 상속구조를 만드려면
is - a 말고 is a kind of 를 써보면 편함
ex) 아빠는 딸의 한 종류이다 --> 부적격

반대로 만들면 안되는 관계
has - a 관계 --> ~는 ~를 갖고 있다.   // 말이 된다면 상속으로 부적격
ex) 탱크는 대포를 갖고 있다. --> 말이되서 상속부적격 탱크는 대포에 상속되 대포를 버리고 쓸수 없음 계속 달고 있어야함 그래서 부적격

-------------------------------------------------------------------------------------------------------------------------

Method overriding

메서드 오버라이딩(Method Overriding)은 자바에서 상속 관계에 있는 클래스에서 슈퍼클래스에 정의된 메서드를 
서브클래스에서 동일한 시그니처(메서드 이름, 매개변수 유형 및 개수, 반환 유형)로 다시 정의하는 것을 말한다.

class Animal {
    void makeSound() {
        System.out.println("동물이 소리를 낸다.");
    }
}

class Dog extends Animal {
    @Override
    void makeSound() {
        System.out.println("멍멍!");
    }
}

class Cat extends Animal {
    @Override
    void makeSound() {
        System.out.println("야옹~");
    }
}
