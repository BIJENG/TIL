
SQL (Structured Query Language)
DBMS 에서 데이터를 정의 조작, 제어 하기 위한 프로그래밍 언어

데이터 조회개념
셀렉트 연산 : 주어진 조건을 만족하는 튜플(행) 선택
프로젝트 연산 : 주어진 조건을 만족하는 속성(열) 선택
조인 연산 : 두개 이상의 릴레이션(테이블)에서 선택

SELECT 문
데이터를 조회하는데 사용하는 DML 명령문

SELECT 조회할열1, 조회할열2....
FROM 테이블명  

DISTINCT - 중복을 제거 
ex) SELECT DISTINCT EMPNO FROM EMP;

AS - 별칭, 별칭명으로 컬럼의 이름을 바꿀 수 있다.
ex) SELECT ENAME AS COMPANY_NAME FROM EMP;

ORDER BY - 정렬을 처리 
ASC : 오름차순 정렬
DESC : 내릴차순 정렬
ex) SELECT * FROM EMP ORDER BY SAL DESC;

WHERE 절
특정한 ROW 를 선택하는 명령
ex) SELECT * FROM EMP WHERE DEPTNO = 30;

AND,OR 를 이용
ex) SELECT * FROM EMP WHERE DEPTNO = 30 AND JOB = 'SALESMAN';

산술연산
<, >, <=, >=, !=. <>, NOT 와 같은 BOOLEAN EXPRESSION 사용가능

IN 연산 - =의 OR 연산을 간단하게 표현하는 연산
BETWEEN 연산 - >=, <= 의 OR 연산을 간단하게 표현하는 연산
ex) SELECT * FROM EMP WHERE JOB IN('MANAGER', 'SALESMAN');
    SELECT * FROM EMP WHERE SAL BETWEEN 2000 AND 3000;

LIKE 연산 - 문자열 검색을 위한 연산
ex) SELECT * FROM EMP WHERE ENAME LIKE 'S%'
'%' 는 와일드 카드 문자
_ 는 1개의 문자
% 는 아무문자(길이제한없음)

IS NULL - NULL값인지 판단하는 연산
ex) SELECT * FROM EMP WHERE COMM = NULL; (x)
    SELECT * FROM EMP WHERE COMM IS NULL; (O)





CRUD 란
CREATE, READ, UPDATE, DELETE 의 약자로 데이터를 관리하기 위해서 필요한 연산의 종류를 표현한 개념
CREATE -> CREATE 명령어
READ -> SELECT 명령어
UPDATE -> INSERT 명령어, UPDATE 명령어
DELETE -> DELETE 명령어

CREATE TABLE - 테이블을 만드는 명령어
ex) CREATE TABLE table_name (
      column1 datatype,
      column2 datatype,
      ....
  );


DROP TABLE table_name; - 테이블 삭제

INSERT - 테이블에 데이터를 저장하는 명령어
ex) INSERT INTO table_name (column1, column2, ...)
    VALUES (value1, value2, ...);

UPDATE - 저장된 데이터를 변경하는 명령어
ex) UPDATE table_name
    SET column1 = value1, column2 = value2, ...
    WHERE condition;


COMMIT
데이터의 변경을 영구적으로 적용하라는 명령어
데이터는 한번의 변경으로 끝나는것이 아니라 여러 과정을 거쳐서(Transaction) 최종적으로 변경됨
커밋은 이러한 결과를 최종적으로 적용할 것을 의미한다.


함수
  내장함수 : 이미 만들어져 사용만하면 되는 함수
  사용자정의 함수 : 개발자가 필요에 의해 만드는 함수

내장함수의 종류
  단일행함수 : 각 입력행당 결과 도출(문자, 숫자, 날짜, 형변환, 널처리, 조건 등등)
  다중행함수 : 여러 입력 행들당 결과 도출

UPPER - 대문자로 변환
LOWER - 소문자로 변환
INITCAP - 첫글자 대문자 나머지 소문자로 변환
ex) SELECT ENAME, UPPER(ENAME), LOWER(ENAME) FROM EMP;
    SELECT * FROM EMP WHERE UPPER(ENAME) = UPPER('Smith);


LENGTH - 문자열의 길이 출력
LENGTHB - 문자열의 바이트 수 출력 
ex) SELECT ENAME, LENGTH(ENAME) FROM EMP;
    SELECT ENAME, LENGTH(ENAME) FROM EMP WHERE LENGTH(ENAME) > 5;

SUBSTR - 문자열의 일부를 추출하는 함수
SUBSTR(문자열, 시작, 추출길이) 시작부터 추출길이까지
SUBSTR(문자열, 시작) 시작부터 끝까지

INSTR - 문자열안에 특정 문자가 있는지 검색
ex) SELECT INSTR('hello oracle!', 'l'), INSTR('hello oracle!', 'l', 5) FROM DUAL;
해석 헬로 오라클에서 L 이 몇번째에 있는지, 헬로오라클에서 L이 몇번째에있는지 5번째인덱스부터 시작
