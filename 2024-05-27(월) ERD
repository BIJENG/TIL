ERD(Entity-Relationship Diagram) 
데이터베이스 설계를 위한 도구로, 데이터베이스의 구조를 시각적으로 표현해줍니다.
ERD는 데이터베이스에 어떤 데이터가 저장될 것이며, 데이터 간의 관계가 어떻게 되는지를 명확하게 보여줍니다. 
이를 통해 데이터베이스 설계자가 데이터베이스의 논리적 구조를 쉽게 이해하고 설계할 수 있습니다.

ERD의 주요 구성 요소
1. 엔티티(Entity)
엔티티는 데이터베이스에 저장되는 객체 또는 개체를 나타냅니다. 예를 들어, '사용자', '제품', '주문' 등이 엔티티가 될 수 있습니다.
엔티티는 보통 사각형으로 표시되며, 엔티티의 이름은 대문자로 씁니다.

2. 속성(Attribute)
속성은 엔티티가 가지고 있는 세부 정보를 의미합니다. 예를 들어, '사용자' 엔티티의 속성은 '이름', '이메일', '전화번호' 등이 될 수 있습니다.
속성은 타원으로 표시되며, 엔티티와 연결됩니다.

3. 관계(Relationship)
관계는 엔티티 간의 연결을 나타냅니다. 예를 들어, '사용자'와 '주문' 엔티티 간의 관계는 '사용자가 주문을 한다'로 표현될 수 있습니다.
관계는 다이아몬드 모양으로 표시되며, 연결된 엔티티와 선으로 이어집니다.

4. 키(Key)
키는 엔티티의 각 인스턴스를 고유하게 식별하는 속성입니다. 주 키(Primary Key)는 반드시 고유해야 하며, 다른 엔티티와의 관계를 맺을 때 참조 키(Foreign Key)로 사용될 수 있습니다.


ERD의 유형
1. 개념적 ERD
고수준의 추상화된 모델로, 비즈니스 관점에서 중요한 엔티티와 관계를 나타냅니다.
주로 비즈니스 분석 단계에서 사용됩니다.

2. 논리적 ERD
좀 더 상세한 모델로, 실제 데이터베이스 구조에 가까운 형태로 표현됩니다.
엔티티, 속성, 관계를 명확하게 정의하여 데이터베이스 설계 단계에서 사용됩니다.


ERD 작성의 주요 단계
1. 요구사항 수집: 비즈니스 요구사항을 분석하여 필요한 엔티티와 관계를 식별합니다.
2. 엔티티 식별: 시스템에서 관리해야 할 주요 엔티티를 정의합니다.
3. 속성 정의: 각 엔티티에 필요한 속성을 정의합니다.
4. 관계 정의: 엔티티 간의 관계를 정의하고, 관계의 유형(일대일, 일대다, 다대다)을 명확히 합니다.
5. ERD 작성: 앞서 정의한 엔티티, 속성, 관계를 바탕으로 ERD를 작성합니다.
