URI(Uniform Resource Identifier)
 -URI : indentifier
 -URL : Locator(실제로 사용)
 -URN : Name

Domain Name System + File System 을 이용하여 URL 구현

URL 형식과 Query
scheme:httt://[userName@]host[:port][/path][?query][#fragment]
ex)    https://www.google.com:443/search?q=hello&hi=ko
Query
-key = value
-?로 시작 &로 추가
-Query String, Query Parameter로 불림

Query String 과 GET 방식
 Query String은 GET 방식으로 전송



웹서버에서 클라이언트 정보 유지 방식
Stateful(상태유지) : 클라이언트 상태를 유지
 -상태를 유지하기 때문에 상태유지 비용이 발생
 -중간에 서버를 바꿀 수 없다
 -고정적 구조

Stateless(상태비유지) : 클라이언트 상태를 유지 하지 않음
 -웹 서버의 기본 방식
 -클라이언트가 자신의 상태를 지속적으로 알림
 -서버에서는 클라이언트 정보를 유지하지 않기때문에 확장성이 높음
 -유연적 구조


웹 서버의 구현방식(MVC 패턴)
웹 서버의 구현 방식 중 하나로 MVC(Model-View-Controller) 패턴이 일반적으로 사용됩니다. 
MVC 패턴은 소프트웨어를 구성하는 세 가지 주요 요소인 모델(Model), 뷰(View), 컨트롤러(Controller)를 분리하여 각각의 역할을 명확히 정의하는 패턴입니다.

모델(Model):
애플리케이션의 비즈니스 로직을 정의합니다.
데이터를 처리하고 관리하는 부분으로, 데이터베이스와 상호작용합니다.
모델은 주로 데이터베이스의 테이블과 매핑되는 객체(ORM을 통해)로 구성됩니다.
사용자에게 제공되는 서비스나 데이터를 처리하고 비즈니스 룰을 구현합니다.

뷰(View):
사용자에게 보여지는 부분을 담당합니다.
UI를 구성하고, 사용자 인터페이스 요소를 제공합니다.
주로 HTML, CSS, JavaScript 등을 사용하여 디자인과 레이아웃을 구현합니다.
모델의 데이터를 표시하고 사용자 입력을 받아 컨트롤러에 전달합니다.

컨트롤러(Controller):
사용자 입력을 받고 처리하는 부분을 담당합니다.
모델과 뷰 간의 중개자 역할을 합니다.
클라이언트로부터 요청을 받아 해당 요청을 처리하고, 모델의 상태를 업데이트하거나 적절한 뷰를 선택하여 결과를 보여줍니다.
주로 웹 애플리케이션의 라우팅, 데이터 처리 로직, 비즈니스 로직을 구현합니다.
MVC 패턴은 각 요소가 서로 독립적으로 분리되어 있기 때문에 유지보수와 확장이 용이하며, 코드의 재사용성이 높습니다. 
또한, 각 요소의 역할이 명확히 정의되어 협업이나 테스트가 용이합니다. 
이러한 이유로 MVC 패턴은 웹 애플리케이션 개발에서 널리 사용되는 아키텍처 패턴 중 하나입니다.

JSP
JSP(JavaServer Pages)는 Java 언어 기반의 서버 사이드 스크립트 언어로, 동적 웹 페이지를 생성하는 데 사용됩니다. 
JSP는 HTML(또는 XML)과 Java 코드를 혼합하여 웹 페이지를 생성하는 간단한 방법을 제공합니다.

여기에는 JSP를 이해하는 데 필요한 몇 가지 주요 개념이 있습니다
스크립트 요소: JSP 페이지 내에서 Java 코드를 삽입하는 데 사용됩니다. <
% %>로 감싸진 영역 안에 Java 코드를 작성할 수 있습니다. 예를 들어, 변수 선언, 반복문, 조건문 등을 사용할 수 있습니다.

표현 언어(EL, Expression Language): JSP 페이지에서 데이터를 표시하거나 연산을 수행하는 데 사용됩니다. 
${ }로 감싸진 표현식을 사용하여 변수 값을 표시하거나 메서드 호출 등을 수행할 수 있습니다.

액션 태그: JSP 페이지에서 서버 사이드 로직을 수행하는 데 사용됩니다. 
<jsp: ...> 형식의 태그로 시작하며, 데이터베이스 연결, 반복문 처리, 페이지 이동 등을 처리하는 데 사용됩니다.

디렉티브: JSP 페이지의 전체적인 속성을 정의하는 데 사용됩니다. 
<%@ %>로 시작하며, 페이지 지시자, 인클루드 지시자, 태그 라이브러리 지시자 등이 있습니다.

태그 라이브러리: 커스텀 태그를 정의하여 재사용 가능한 기능을 구현할 수 있습니다. 
JSP 페이지에서 자체 태그를 사용하여 커스텀 기능을 수행할 수 있습니다.
