

개념적 모델링의 최종적 목표는 요구분석의 결과를 ERD로 포현하는것임

개념적 모델링의 목표 - 엔티티, 속성 , 관계의 도출

개체의 정의(Entity)
현실세계의 유형, 무형의 대상체를 추상화하여 표현하는 단위
저장할 만한 가치가 있는 중요 데이터를 가지고 있는 사람이나 사물 등 이며 가장 중요한요소
즉 테이블이 될만한것!

개체의 특징
-식별가능 : 유일한 식별자에 의해 식별가능
-영속성 : 영속적으로 존재, 업무에 필요한 정보
-관계성 : 엔티티간의 관계가 존재

속성의 정의
개체가 가지고 있는 고유한 특성

속성의 유형
기본속성 : 개념단계에서 도출
설계속성 : 설계과정에서 도출
파생속성 : 계산결과나 파생으로부터 도출

관계의 정의
개체와 개체가 맺고 있는 의미있는 연관성
관계는 속성을 가질 수 있다.

관계의 종류
1:1 관계 , 1:n 관계, n:m 관계

카디널리티(Cardinality) 
데이터베이스에서 관계형 데이터 모델에서 테이블 간 관계를 설명하는 데 사용되는 개념입니다. 카디널리티는 한 테이블의 행과 다른 테이블의 행 간의 관계를 설명합니다.

카디널리티에는 세 가지 유형이 있습니다

One-to-One (일대일): 한 테이블의 각 행이 다른 테이블의 한 행과 대응합니다. 
예를 들어, 사람과 그 사람의 운전 면허증 번호를 포함하는 테이블이 있을 때, 각 사람은 오직 하나의 운전 면허증을 가질 수 있고 각 면허증은 오직 한 사람에게 속할 수 있습니다.

One-to-Many (일대다): 한 테이블의 한 행이 다른 테이블의 여러 행과 대응합니다. 예를 들어, 한 회사는 여러 직원을 가질 수 있지만 각 직원은 하나의 회사에 속합니다.

Many-to-Many (다대다): 한 테이블의 여러 행이 다른 테이블의 여러 행과 대응합니다. 이러한 관계를 나타내기 위해 중간 테이블이 필요할 수 있습니다.
예를 들어, 학생과 과목 간의 관계는 다대다 관계일 수 있습니다. 하나의 학생은 여러 과목을 수강할 수 있고, 한 과목은 여러 학생에 의해 수강될 수 있습니다.

카디널리티는 데이터베이스 설계에서 매우 중요한 개념이며, 효율적인 데이터 관리와 쿼리 작성을 위해 고려되어야 합니다.


옵션널리티(Optionality) 
데이터베이스 설계에서 엔터티 간 관계에서 발생하는 선택적인 연결을 나타냅니다. 이것은 각 엔터티 인스턴스가 다른 엔터티 인스턴스와의 관계를 가질 필요가 있는지 여부를 결정합니다.

옵션널리티에는 다음과 같은 두 가지 유형이 있습니다

필수적 관계 (Mandatory Relationship): 이 경우, 한 엔터티 인스턴스는 다른 엔터티 인스턴스와의 관계를 반드시 가져야 합니다. 
즉, 관계가 존재하지 않는다면 데이터베이스 무결성 제약 조건에 위배됩니다. 이러한 경우를 강제적 관계라고도 합니다.

선택적 관계 (Optional Relationship): 선택적 관계에서는 엔터티 인스턴스가 다른 엔터티 인스턴스와의 관계를 가질 수도 있고, 가지지 않을 수도 있습니다. 
즉, 관계가 없어도 데이터베이스 무결성에 위배되지 않습니다. 이러한 경우를 선택적 관계라고 합니다.

옵션널리티와 카디널리티는 종종 함께 고려되며, 데이터베이스 설계에서 엔터티 간 관계를 명확히하는 데 중요한 개념입니다. 
함께 고려되어야 하는 다른 중요한 요소로는 엔터티 간 관계의 인스턴스가 삭제될 때의 동작(예: Cascade Delete)이 있습니다.


DB 이상현상 - 테이블 설계상의 오류로 인해 데이터의 삽입, 삭제 , 갱신을 할 경우 발생되는 부작용

삽입 이상 (Insertion Anomaly): 어떤 데이터를 삽입할 때 원하지 않는 결과가 발생하는 경우입니다. 예를 들어, 부분적으로만 알려진 정보를 삽입하려고 할 때 발생합니다.
갱신 이상 (Update Anomaly): 데이터를 갱신할 때 일관성이 깨지는 경우를 말합니다. 일부 데이터를 갱신하고 나머지 데이터를 갱신하지 않아 정보가 일관성 없게 될 수 있습니다.
삭제 이상 (Deletion Anomaly): 특정 데이터를 삭제할 때 의도치 않게 다른 데이터도 함께 삭제되는 경우를 의미합니다. 이로 인해 데이터 손실이 발생할 수 있습니다.


정규화(Normalization)
RDB설계시 중복의 최소화, 이상현상방지, 성능개선을 위한 설계 프로세스
정규화는 일반적인 표를 RDB에 맞는 표로 개선한다

제 1정규화의 의미
반복되는 속성을 제거하여 모든 속성이 원자 도메인(Atomic colums)을 가질 수 있도록 하는 정규화
하나의 컬럼은 하나의 의미를 가져야함
다대다 M:N 속성일 경우 제 1정규화가 필요한 경우가 발생한다
일반적으로 컬럼을 분리하고 매핑테이블을 작성한다 -> M:N 을 1:N 으로 변경

제 2정규화의 의미
제 1정규형을 만족하는 테이블에서 부분 종속성을 제거하여 완전 함수 종속성을 만족하는 정규형
이중키를 사용하지 않는다면 2정규형은 하지 않음
완전 함수적 종속이란 X -> Y
X: 독립변수
Y: 종속변수
모든 Y는 X에 종속된다
즉 모든 데이터는 키에 종속

제 3정규화의 정의
이행함수 종속성을 제거하는 정규화
이행함수 종속성
X -> Y
Y -> Z
X -> Y -> Z
