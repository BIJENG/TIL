
  데이터베이스(Database) 의 개념 
데이터베이스는 체계적으로 구성된 데이터의 집합으로, 효율적인 데이터 관리와 접근을 위해 사용


  데이터베이스(Database) 의 특징
구조화된 데이터: 데이터베이스는 구조화된 형태로 데이터를 저장하고 관리합니다. 이는 데이터의 일관성과 정확성을 유지하고 데이터 검색 및 조작을 용이하게 합니다.
중복 제거: 데이터베이스는 중복 데이터를 최소화하여 데이터 일관성을 유지합니다. 중복 데이터가 줄어들면 저장 공간을 절약하고 데이터의 일관성을 유지하기 쉬워집니다.
데이터 공유와 동시 접근: 데이터베이스는 여러 사용자가 동시에 접근하여 데이터를 공유할 수 있습니다. 이를 통해 협업이 용이해지고 데이터의 일관성을 유지할 수 있습니다.
데이터 보안: 데이터베이스는 데이터의 무결성과 보안을 유지하기 위한 다양한 기능을 제공합니다. 접근 권한을 부여하고 보안 정책을 시행하여 민감한 데이터를 보호할 수 있습니다.
트랜잭션 관리: 데이터베이스는 트랜잭션(Transaction)을 지원하여 데이터의 일관성을 유지합니다. 트랜잭션은 데이터베이스에서 수행되는 작업의 단위로, 모두 성공하거나 모두 실패하도록 보장됩니다.
데이터베이스 관리 시스템(DBMS): 데이터베이스는 데이터베이스 관리 시스템을 통해 관리됩니다. DBMS는 데이터베이스를 생성, 조작, 관리하는 데 사용되는 소프트웨어입니다.


  데이터베이스의 다양한 측면

통합데이터(Integrated Data):
통합데이터는 여러 다른 데이터 소스에서 나온 데이터를 하나로 통합하여 관리하는 것을 의미합니다.
이는 데이터의 일관성을 유지하고 중복을 방지하여 데이터 관리를 용이하게 합니다.
예를 들어, 한 기관이나 기업의 여러 부서에서 생성된 데이터를 통합하여 하나의 데이터베이스에 저장하면, 데이터에 일관성을 유지하고 데이터를 효율적으로 관리할 수 있습니다.

공용데이터(Open Data):
공용데이터는 공개적으로 이용 가능한 데이터를 말합니다.
정부, 비영리 단체, 기업 등이 수집하고 유지하는 데이터 중 일부는 공개적으로 접근 가능한 형태로 제공될 수 있습니다.
공용데이터는 일반인, 연구자, 개발자 등에게 유용한 정보를 제공하며, 예를 들어 도시의 교통 데이터, 날씨 정보, 인구 통계 등이 있습니다.

운영데이터(Operational Data):
운영데이터는 조직이나 기업이 일상적인 운영 활동에서 생성되고 사용하는 데이터를 말합니다.
주로 업무 프로세스에 관련된 데이터로, 주문 정보, 거래 내역, 고객 정보 등이 이에 해당합니다.
이러한 데이터는 조직의 실제 운영을 지원하고 비즈니스 결정에 사용됩니다.

저장데이터(Stored Data):
저장데이터는 데이터베이스나 다른 형태의 데이터 저장소에 영구적으로 저장된 데이터를 의미합니다.
이는 디스크, 테이프, 클라우드 저장소 등에 저장될 수 있습니다.
저장데이터는 필요에 따라 검색되거나 조작될 수 있으며, 데이터베이스 관리 시스템(DBMS)을 통해 관리됩니다.

  데이터베이스의 특징

실시간접근(Real-time Access):
데이터베이스에서 실시간접근은 사용자가 데이터베이스에 저장된 정보에 실시간으로 접근할 수 있는 능력을 의미합니다.
즉, 데이터베이스의 정보가 변경되면 즉시 사용자가 그 변경 사항에 액세스할 수 있어야 합니다.
이는 실시간 처리와 함께 데이터의 신속한 업데이트와 사용자의 실시간 요구를 충족시키는 것을 의미합니다.

동시공용(Concurrent Usage):
데이터베이스에서 동시공용은 여러 사용자가 동시에 데이터베이스에 접근하고 데이터를 조작할 수 있는 능력을 의미합니다.
이는 데이터베이스 관리 시스템(DBMS)이 여러 사용자의 요청을 동시에 처리하고 데이터의 일관성을 유지하면서 데이터의 동시 접근을 가능하게 합니다.
동시공용은 데이터베이스 시스템의 성능과 확장성을 향상시키는 데 중요합니다.

지속적변화(Ongoing Change):
데이터베이스에서 지속적변화는 데이터베이스의 구조나 내용이 지속적으로 변경될 수 있다는 것을 의미합니다.
이는 새로운 데이터의 추가, 기존 데이터의 수정, 삭제 등의 변경 사항을 포함합니다.
데이터베이스는 이러한 지속적인 변경을 수용하고 관리할 수 있어야 합니다.

내용에 의한 참고(Content Referencing):
데이터베이스에서 내용에 의한 참고는 데이터를 식별하는 데 데이터 내용(내용 기반)을 사용하는 것을 의미합니다.
전통적인 데이터베이스에서는 주로 기본 키(primary key)와 같은 식별자를 사용하여 데이터를 식별하지만, 내용에 의한 참고는 데이터의 내용 자체를 기반으로 데이터를 식별하는 방법을 사용합니다.
내용에 의한 참고는 유사한 문서, 이미지, 오디오 클립 등과 같이 기본 키를 사용하기 어려운 데이터 유형에서 유용합니다.


스키마(Schema)는 데이터베이스에서 데이터의 구조를 정의하는 개념입니다. 
이는 데이터베이스에 저장되는 데이터의 구조, 형식, 관계, 제약 조건 등을 설명하는 데 사용됩니다. 
스키마는 데이터베이스의 설계 단계에서 중요한 역할을 하며, 데이터베이스 관리 시스템(DBMS)이 데이터를 저장하고 관리하는 데 필요한 정보를 제공합니다.

일반적으로 스키마는 다음 두 가지 유형으로 나뉩니다
데이터 정의 언어(DDL)에 의한 스키마: 데이터베이스의 논리적 구조를 정의하는 것으로, 테이블, 열, 데이터 형식, 관계 등을 포함합니다. 이러한 스키마는 데이터베이스의 구조를 정의하고 데이터베이스 객체의 생성, 수정, 삭제를 수행하는 데 사용됩니다.
데이터 조작 언어(DML)에 의한 스키마: 데이터베이스에서 실제로 저장되는 데이터의 구조를 나타냅니다. 이는 테이블에 실제로 저장되는 데이터 레코드의 형식을 정의하고, 데이터의 삽입, 갱신, 삭제 작업을 수행하는 데 사용됩니다.


  DBMS는 데이터베이스 관리 시스템(Database Management System)

데이터베이스를 생성, 유지보수, 관리하는 소프트웨어입니다. DBMS는 다음과 같은 주요 기능을 수행합니다

데이터베이스 생성: DBMS는 데이터베이스를 생성할 때 필요한 구조를 정의하고 데이터를 저장할 수 있는 공간을 할당합니다.
데이터베이스 관리: DBMS는 데이터베이스의 구조를 관리하고 데이터를 저장, 수정, 삭제하는 작업을 수행합니다. 이는 데이터베이스의 스키마를 정의하고 데이터의 무결성을 유지하는 것을 포함합니다.
데이터 접근 제어: DBMS는 데이터베이스에 접근하는 사용자에게 적절한 권한을 부여하여 데이터의 보안을 유지합니다. 이는 사용자 인증 및 권한 부여를 통해 데이터의 무단 액세스를 방지하는 것을 포함합니다.
데이터 무결성 유지: DBMS는 데이터베이스의 일관성과 무결성을 유지하기 위해 다양한 제약 조건을 지원합니다. 이는 고유한 값, 외래 키 제약 등을 통해 데이터의 무결성을 보장하는 것을 포함합니다.
데이터 백업 및 복구: DBMS는 데이터베이스의 안정성을 유지하기 위해 데이터의 백업과 복구를 지원합니다. 이는 데이터베이스가 손상되거나 장애가 발생했을 때 데이터의 손실을 최소화하는 것을 목표로 합니다.
동시성 제어: DBMS는 여러 사용자가 동시에 데이터베이스에 접근할 때 발생할 수 있는 문제를 해결하기 위해 동시성 제어를 제공합니다. 이는 트랜잭션 격리 수준을 설정하고 잠금(locking)을 통해 데이터의 일관성을 유지하는 것을 포함합니다.
쿼리 처리 및 최적화: DBMS는 사용자의 쿼리를 처리하고 최적화하여 효율적인 데이터 검색 및 조작을 지원합니다. 이는 쿼리 실행 계획을 작성하고 인덱스를 활용하여 데이터 액세스를 최적화하는 것을 포함합니다.
보고서 생성 및 데이터 분석: DBMS는 데이터베이스에서 데이터를 분석하고 보고서를 생성하는 기능을 제공합니다. 이는 데이터 마이닝, 비즈니스 인텔리전스(Business Intelligence) 등의 분석 작업을 지원하는 것을 포함합니다.


  DBMS(Database Management System)의 주요 특징

데이터의 독립성(Data Independence):
논리적 데이터 독립성: 사용자가 데이터에 대한 논리적 구조와 응용 프로그램을 분리할 수 있습니다. 이는 데이터의 논리적 구조가 변경되더라도 응용 프로그램에 영향을 미치지 않도록 합니다.
물리적 데이터 독립성: 데이터의 물리적 구조를 변경해도 논리적 구조나 응용 프로그램에는 영향을 미치지 않습니다. 예를 들어, 인덱스를 추가하거나 데이터를 새로운 디스크에 이동하는 등의 작업을 수행할 수 있습니다.

데이터의 무결성(Data Integrity):
DBMS는 데이터베이스에 저장된 데이터의 일관성과 정확성을 보장합니다. 이를 위해 다양한 제약 조건(Primary Key, Unique, Foreign Key 등)을 지원하고 데이터 입력 및 수정에 대한 검사를 수행합니다.

데이터의 보안(Security):
DBMS는 데이터의 보안을 유지하기 위해 사용자 인증과 권한 관리를 지원합니다. 이를 통해 사용자가 데이터에 대한 적절한 권한을 부여받고 민감한 정보에 대한 접근을 제어할 수 있습니다.

데이터의 공유와 동시 접근(Concurrency Control):
DBMS는 여러 사용자가 동시에 데이터베이스에 접근하고 데이터를 조작할 수 있는 동시성 제어를 제공합니다. 이를 통해 데이터의 일관성을 유지하고 데이터베이스의 성능을 향상시킵니다.

데이터의 백업과 복구(Backup and Recovery):
DBMS는 데이터베이스의 안전한 백업과 복구를 지원하여 데이터 손실을 방지합니다. 이는 데이터베이스가 손상되거나 장애가 발생했을 때 데이터를 복구할 수 있는 기능을 제공합니다.

데이터의 일관성(Consistency):
DBMS는 여러 데이터베이스 간의 일관성을 유지하고 트랜잭션(Transaction)을 통해 데이터의 일관성을 보장합니다. 모든 트랜잭션은 성공하거나 실패하고, 데이터베이스는 항상 일관된 상태를 유지합니다.

데이터의 효율적 관리(Efficient Management):
DBMS는 데이터의 효율적 관리를 위해 인덱스, 클러스터링, 캐싱 등의 기술을 사용하여 데이터 액세스를 최적화합니다. 이를 통해 데이터베이스의 성능을 향상시키고 리소스를 효율적으로 활용합니다.



  RDBMS는 관계형 데이터베이스 관리 시스템(Relational Database Management System)
  
데이터를 테이블(table)로 구성하고 테이블 간의 관계를 사용하여 데이터를 저장하고 관리하는 데이터베이스 시스템입니다.

RDBMS의 특징
테이블 기반 데이터 구조: 데이터는 테이블로 구성되며, 각 테이블은 행(row)과 열(column)로 이루어진 데이터의 집합을 나타냅니다.
정규화(Normalization): 데이터 중복을 최소화하기 위해 정규화 과정을 통해 테이블을 설계합니다. 이는 데이터의 일관성과 효율성을 유지하는 데 도움이 됩니다.
SQL(Structured Query Language) 사용: RDBMS는 SQL을 사용하여 데이터베이스에 쿼리를 실행하고 데이터를 조작하는 데 사용됩니다. SQL은 표준화된 데이터베이스 언어로, 다양한 RDBMS에서 지원됩니다.
ACID 트랜잭션: RDBMS는 트랜잭션(Transaction)을 지원하여 데이터의 일관성을 유지합니다. ACID(Atomicity, Consistency, Isolation, Durability)는 트랜잭션의 성질을 보장하는데 사용됩니다.
데이터 무결성 제약 조건: RDBMS는 데이터의 무결성을 보장하기 위해 다양한 제약 조건(Primary Key, Foreign Key, Unique 등)을 지원합니다.
다양한 인덱싱 기술: RDBMS는 다양한 인덱스를 사용하여 데이터 액세스를 최적화합니다. 이는 데이터베이스의 성능을 향상시키고 쿼리의 실행 속도를 향상시킵니다.


  기본 용어

도메인(Domain):
도메인은 특정 열이나 속성이 가질 수 있는 값의 범위를 정의합니다. 즉, 특정 속성이 가질 수 있는 가능한 값들의 집합을 의미합니다. 예를 들어, 나이 속성의 도메인은 0 이상의 정수일 수 있습니다.

튜플(Tuple):
튜플은 릴레이션(relation) 또는 테이블의 각 행을 나타냅니다. 즉, 하나의 레코드를 의미합니다. 튜플은 해당 릴레이션의 모든 열에 대한 값을 포함합니다.

카디널리티(Cardinality):
카디널리티는 릴레이션에 포함된 튜플의 수를 나타냅니다. 즉, 테이블이나 릴레이션에 저장된 행의 수를 의미합니다.

차수(Degree):
차수는 릴레이션에 포함된 열 또는 속성의 수를 나타냅니다. 즉, 테이블이나 릴레이션의 열의 수를 의미합니다.

릴레이션(Relation):
릴레이션은 관계형 데이터베이스에서 테이블을 의미합니다. 즉, 튜플의 집합으로 구성된 데이터 구조를 말합니다. 각 릴레이션은 특정한 도메인과 차수를 가지며, 테이블의 형태로 데이터를 저장합니다.

키(Key):
키는 릴레이션에서 튜플을 유일하게 식별하기 위해 사용되는 열 또는 열의 집합입니다. 가장 일반적으로 사용되는 키는 기본 키(Primary Key)와 외래 키(Foreign Key)입니다. 
기본 키는 릴레이션 내에서 각 튜플을 고유하게 식별하기 위해 사용되고, 외래 키는 다른 릴레이션과의 관계를 나타내기 위해 사용됩니다.

  카디널리티와 차수 비교
  
카디널리티(Cardinality):
카디널리티는 관계형 데이터베이스에서 특정 관계(Relation)에 포함된 튜플(Tuple)의 수를 나타냅니다.
다시 말해, 특정 릴레이션에 있는 행(row)의 수를 말합니다.
카디널리티는 관계형 데이터베이스에서 데이터의 양을 나타내는 데 사용됩니다.
예를 들어, "고객" 테이블의 카디널리티가 100이라면, 해당 테이블에는 100명의 고객 정보가 포함되어 있다는 것을 의미합니다.

차수(Degree):
차수는 관계형 데이터베이스에서 특정 릴레이션(Relation)에 있는 열(Column)의 수를 나타냅니다.
다시 말해, 릴레이션에 포함된 속성(Attribute)의 수를 말합니다.
차수는 테이블의 열의 개수를 의미하며, 각 열은 특정 속성을 나타냅니다.
예를 들어, "고객" 테이블의 차수가 5이면, 해당 테이블에는 5개의 속성이 존재한다는 것을 의미합니다. 이는 고객의 아이디, 이름, 주소, 전화번호 등의 속성을 나타냅니다.




