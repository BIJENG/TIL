함수
- Block 과 Instuction Set 으로 이루어져있다
블록(Block): 함수는 코드 블록을 가지고 있다. 
             이 블록은 중괄호({})로 둘러싸인 코드의 집합. 
             블록은 함수의 시작과 끝을 나타내며, 함수가 실행될 때 블록 내의 코드가 순차적으로 실행된다.
             
명령어 집합(Instruction Set): 함수 내부에는 수행해야 할 작업을 정의하는 명령어 집합이 포함된다. 
                             이 명령어는 변수 할당, 조건문, 반복문 등과 같은 작업을 수행하는데 사용된다.

자바스크립트 엔진은 바로 line by line 으로 실행하지 않고 한번 전체를 쓱 훑고 line by line으로 진행된다.
- 자바스크립트 엔진은 코드를 실행하기 전에 몇 가지 최적화와 해석을 수행한다 
  이 최적화 과정 중에는 코드의 문법을 분석하고 변수를 선언하고 함수를 파싱하는 것이 포함될 수 있다. 
  이는 엔진이 전체 코드를 살펴보고 실행 흐름을 이해하기 위한 작업이다.

------------------------------------------------------------------------------------------------------

자바스크립트에서 자주 사용하는 용어 정리

${}
JavaScript의 템플릿 리터럴(template literal) 문법이다. 
이것은 문자열 내부에서 변수나 표현식의 값을 삽입할 때 사용된다.
${}를 사용하면 변수나 표현식을 문자열 안에 쉽게 포함시킬 수 있다. 
${} 내부에는 변수, 함수 호출, 연산 등 어떠한 표현식도 사용할 수 있다. 
이것은 문자열을 보다 가독성 있고 편리하게 작성할 수 있도록 도와준다.
ex)
const index = 1;
const char = 'a';
console.log(`인덱스 ${index}: ${char}`); // "인덱스 1: a"

`` = 백틱
같은 기호는 템플릿 리터럴(template literal) 문법의 일부분이다. 
이 기호는 일반적으로 문자열을 표현하는 데 사용되는 따옴표(')나 쌍따옴표("`) 대신에 사용된다. 
템플릿 리터럴은 문자열을 작성하는 새로운 방법을 제공하여 문자열 내부에 변수나 표현식을 삽입할 수 있다.
ex)
const name = 'John';
console.log(`안녕하세요, ${name}님!`);
위의 코드에서 템플릿 리터럴을 사용하여 ${name}의 값을 변수 name의 값으로 대체한다. 
따라서 결과는 "안녕하세요, Alice님!"이 된다.



